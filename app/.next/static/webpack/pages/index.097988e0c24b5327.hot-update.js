"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/hooks/useClaimBet.tsx":
/*!***********************************!*\
  !*** ./src/hooks/useClaimBet.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useClaimBet: function() { return /* binding */ useClaimBet; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/useConnection.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/useAnchorWallet.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/config */ \"./src/config/index.tsx\");\n// app/src/hooks/useClaimBet.ts\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst useClaimBet = ()=>{\n    _s();\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useAnchorWallet)();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const claimBet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (betId)=>{\n        console.log(\"Attempting to claim bet with ID:\", betId);\n        if (!wallet) {\n            console.error(\"Wallet not connected\");\n            setError(new Error(\"Wallet not connected\"));\n            return;\n        }\n        const programId = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].predictionsBetProgramId);\n        console.log(\"Using program ID:\", programId.toString());\n        const provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.AnchorProvider(connection, wallet, _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.AnchorProvider.defaultOptions());\n        const program = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.Program(_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].predictionsBetIdl, programId, provider);\n        console.log(\"Program and provider initialized\");\n        try {\n            setLoading(true);\n            // Convert betId to number\n            const betIndex = parseInt(betId, 10);\n            if (isNaN(betIndex)) {\n                throw new Error(\"Invalid betId: \".concat(betId));\n            }\n            // Generate seeds for PDA\n            const seeds = [\n                _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.utils.bytes.utf8.encode(_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].BET_ACCOUNT_SEED),\n                new Uint8Array(new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.BN(betIndex).toArray(\"le\", 8))\n            ];\n            console.log(\"Generated seeds for PDA\");\n            // Find the PDA using generated seeds\n            const [betAccountPDA, _bump] = await _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey.findProgramAddressSync(seeds, programId);\n            console.log(\"Bet Account PDA:\", betAccountPDA.toString(), \"Bump:\", _bump);\n            // Fetch the Bet account associated with the bet ID\n            console.log(\"Fetching Bet account...\");\n            const fetchedBetAccount = await program.account.bet.fetch(betAccountPDA); // Using IBetAccount interface\n            console.log(\"Bet Account:\", fetchedBetAccount);\n            // Extract PYTH account public key, Player A's public key, and Player B's public key from the Bet account\n            const pyth = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(fetchedBetAccount.pythPriceKey);\n            const playerA = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(fetchedBetAccount.predictionA.player);\n            const playerB = fetchedBetAccount.predictionB ? new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(fetchedBetAccount.predictionB.player) : null;\n            const playerBAddress = playerB ? new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.PublicKey(playerB) : undefined;\n            console.log(\"PYTH account public key:\", pyth.toString());\n            console.log(\"Player A's public key:\", playerA.toString());\n            console.log(\"Player B's public key:\", playerBAddress ? playerBAddress.toString() : \"Player B not present\");\n            // Call the `claim_bet` instruction\n            const txSignature = await program.methods.claimBet().accounts({\n                bet: betAccountPDA,\n                pyth,\n                playerA: playerA,\n                playerB: playerBAddress,\n                signer: wallet.publicKey,\n                systemProgram: _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.web3.SystemProgram.programId\n            }).rpc();\n            console.log(\"Claimed Bet successfully. Transaction Signature:\", txSignature);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Failed to claim bet:\", err);\n            setError(err instanceof Error ? err : new Error(\"Failed to claim bet\"));\n            setLoading(false);\n        }\n    }, [\n        wallet,\n        connection\n    ]);\n    return {\n        claimBet,\n        loading,\n        error\n    };\n};\n_s(useClaimBet, \"w4Ffxelr6fb7gEojbwzyYvZ2B/w=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useAnchorWallet\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useClaimBet.tsx\n"));

/***/ })

});