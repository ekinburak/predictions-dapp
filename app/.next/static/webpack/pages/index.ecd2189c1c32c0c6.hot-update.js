"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/hooks/useFetchAvailableBets.tsx":
/*!*********************************************!*\
  !*** ./src/hooks/useFetchAvailableBets.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/useConnection.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/useAnchorWallet.js\");\n/* harmony import */ var _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @project-serum/anchor */ \"./node_modules/@project-serum/anchor/dist/browser/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/config */ \"./src/config/index.tsx\");\n// app/src/hooks/useFetchAvailableBets.ts\nvar _s = $RefreshSig$();\n\n\n\n\n\n// Helper function to interpret the state object into a readable string\nfunction interpretBetState(stateObj, duration) {\n    const stateKeys = Object.keys(stateObj);\n    if (duration < 0 && (stateKeys.includes(\"created\") || stateKeys.includes(\"started\"))) {\n        return \"Expired\"; // Mark as Expired if duration is less than 0 and state is Created or Started\n    } else if (stateKeys.includes(\"created\")) {\n        return \"Created\";\n    } else if (stateKeys.includes(\"started\")) {\n        return \"Started\";\n    } else if (stateKeys.includes(\"playerAWon\")) {\n        return \"Player A Won\";\n    } else if (stateKeys.includes(\"playerBWon\")) {\n        return \"Player B Won\";\n    } else if (stateKeys.includes(\"draw\")) {\n        return \"Draw\";\n    }\n    return \"Unknown State\";\n}\nconst useFetchAvailableBets = ()=>{\n    _s();\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useAnchorWallet)();\n    const [bets, setBets] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchBets = async ()=>{\n            if (!wallet) return;\n            const provider = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.AnchorProvider(connection, wallet, _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.AnchorProvider.defaultOptions());\n            const program = new _project_serum_anchor__WEBPACK_IMPORTED_MODULE_1__.Program(_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].predictionsBetIdl, new _solana_web3_js__WEBPACK_IMPORTED_MODULE_2__.PublicKey(_config__WEBPACK_IMPORTED_MODULE_3__[\"default\"].predictionsBetProgramId), provider);\n            try {\n                const fetchedBets = await program.account.bet.all();\n                const formattedBets = fetchedBets.map((bet)=>{\n                    // Assuming the account data matches the IBetAccount interface\n                    const accountData = bet.account;\n                    return {\n                        id: accountData.id.toString(),\n                        pair: \"SOL/USDC\",\n                        potVolume: accountData.amount.toNumber(),\n                        duration: accountData.expiryTs.toNumber() - Math.floor(Date.now() / 1000),\n                        status: interpretBetState(accountData.state)\n                    };\n                });\n                setBets(formattedBets);\n            } catch (error) {\n                console.error(\"Failed to fetch bets:\", error);\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        fetchBets();\n    }, [\n        connection,\n        wallet\n    ]);\n    return {\n        bets,\n        isLoading\n    };\n};\n_s(useFetchAvailableBets, \"FZRFdezlmIUcTgPv+4u36L9dun0=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_4__.useConnection,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_5__.useAnchorWallet\n    ];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (useFetchAvailableBets);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvdXNlRmV0Y2hBdmFpbGFibGVCZXRzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHlDQUF5Qzs7QUFFZ0I7QUFDcUI7QUFDSjtBQUM5QjtBQUNkO0FBbUI5Qix1RUFBdUU7QUFDdkUsU0FBU1Esa0JBQWtCQyxRQUFnQixFQUFFQyxRQUFnQjtJQUN6RCxNQUFNQyxZQUFZQyxPQUFPQyxJQUFJLENBQUNKO0lBQzlCLElBQUlDLFdBQVcsS0FBTUMsQ0FBQUEsVUFBVUcsUUFBUSxDQUFDLGNBQWNILFVBQVVHLFFBQVEsQ0FBQyxVQUFTLEdBQUk7UUFDbEYsT0FBTyxXQUFXLDZFQUE2RTtJQUNuRyxPQUFPLElBQUlILFVBQVVHLFFBQVEsQ0FBQyxZQUFZO1FBQ3RDLE9BQU87SUFDWCxPQUFPLElBQUlILFVBQVVHLFFBQVEsQ0FBQyxZQUFZO1FBQ3RDLE9BQU87SUFDWCxPQUFPLElBQUlILFVBQVVHLFFBQVEsQ0FBQyxlQUFlO1FBQ3pDLE9BQU87SUFDWCxPQUFPLElBQUlILFVBQVVHLFFBQVEsQ0FBQyxlQUFlO1FBQ3pDLE9BQU87SUFDWCxPQUFPLElBQUlILFVBQVVHLFFBQVEsQ0FBQyxTQUFTO1FBQ25DLE9BQU87SUFDWDtJQUNBLE9BQU87QUFDWDtBQUVBLE1BQU1DLHdCQUF3Qjs7SUFDMUIsTUFBTSxFQUFFQyxVQUFVLEVBQUUsR0FBR2IsMkVBQWFBO0lBQ3BDLE1BQU1jLFNBQVNmLDZFQUFlQTtJQUM5QixNQUFNLENBQUNnQixNQUFNQyxRQUFRLEdBQUduQiwrQ0FBUUEsQ0FBUSxFQUFFO0lBQzFDLE1BQU0sQ0FBQ29CLFdBQVdDLGFBQWEsR0FBR3JCLCtDQUFRQSxDQUFDO0lBRTNDQyxnREFBU0EsQ0FBQztRQUNOLE1BQU1xQixZQUFZO1lBQ2QsSUFBSSxDQUFDTCxRQUFRO1lBRWIsTUFBTU0sV0FBVyxJQUFJbkIsaUVBQWNBLENBQUNZLFlBQVlDLFFBQVFiLGlFQUFjQSxDQUFDb0IsY0FBYztZQUNyRixNQUFNQyxVQUFVLElBQUlwQiwwREFBT0EsQ0FBQ0UsK0NBQU1BLENBQUNtQixpQkFBaUIsRUFBRSxJQUFJcEIsc0RBQVNBLENBQUNDLCtDQUFNQSxDQUFDb0IsdUJBQXVCLEdBQUdKO1lBRXJHLElBQUk7Z0JBQ0EsTUFBTUssY0FBYyxNQUFNSCxRQUFRSSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsR0FBRztnQkFDakQsTUFBTUMsZ0JBQWdCSixZQUFZSyxHQUFHLENBQUNILENBQUFBO29CQUNsQyw4REFBOEQ7b0JBQzlELE1BQU1JLGNBQWNKLElBQUlELE9BQU87b0JBQy9CLE9BQU87d0JBQ0hNLElBQUlELFlBQVlDLEVBQUUsQ0FBQ0MsUUFBUTt3QkFDM0JDLE1BQU07d0JBQ05DLFdBQVdKLFlBQVlLLE1BQU0sQ0FBQ0MsUUFBUTt3QkFDdEM5QixVQUFVd0IsWUFBWU8sUUFBUSxDQUFDRCxRQUFRLEtBQUtFLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLO3dCQUNwRUMsUUFBUXRDLGtCQUFrQjBCLFlBQVlhLEtBQUs7b0JBQy9DO2dCQUNKO2dCQUVBNUIsUUFBUWE7WUFDWixFQUFFLE9BQU9nQixPQUFPO2dCQUNaQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUMzQyxTQUFVO2dCQUNOM0IsYUFBYTtZQUNqQjtRQUNKO1FBRUFDO0lBQ0osR0FBRztRQUFDTjtRQUFZQztLQUFPO0lBRXZCLE9BQU87UUFBRUM7UUFBTUU7SUFBVTtBQUM3QjtHQXZDTUw7O1FBQ3FCWix1RUFBYUE7UUFDckJELHlFQUFlQTs7O0FBdUNsQywrREFBZWEscUJBQXFCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9ob29rcy91c2VGZXRjaEF2YWlsYWJsZUJldHMudHN4P2RlYjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYXBwL3NyYy9ob29rcy91c2VGZXRjaEF2YWlsYWJsZUJldHMudHNcblxuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VBbmNob3JXYWxsZXQsIHVzZUNvbm5lY3Rpb24gfSBmcm9tICdAc29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0JztcbmltcG9ydCB7IEFuY2hvclByb3ZpZGVyLCBQcm9ncmFtLCB3ZWIzLCBCTiB9IGZyb20gJ0Bwcm9qZWN0LXNlcnVtL2FuY2hvcic7XG5pbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xuaW1wb3J0IGNvbmZpZyBmcm9tICdAL2NvbmZpZyc7XG5cbi8vIFlvdSBtaWdodCBub3QgbmVlZCB0byBkZWZpbmUgdGhlIGVudGlyZSBpbnRlcmZhY2UgaWYgeW91J3JlIG9ubHkgdXNpbmcgcGFydCBvZiBpdFxuaW50ZXJmYWNlIElCZXRBY2NvdW50IHtcbiAgICBpZDogQk47XG4gICAgYW1vdW50OiBCTjtcbiAgICBleHBpcnlUczogQk47XG4gICAgc3RhdGU6IG9iamVjdDsgIC8vIFNpbmNlIHN0YXRlIGlzIGNvbWluZyBhcyBhbiBvYmplY3Rcbn1cblxudHlwZSBCZXQgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBwYWlyOiBzdHJpbmc7XG4gICAgcG90Vm9sdW1lOiBudW1iZXI7XG4gICAgZHVyYXRpb246IG51bWJlcjtcbiAgICBzdGF0dXM6IHN0cmluZztcbn07XG5cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGludGVycHJldCB0aGUgc3RhdGUgb2JqZWN0IGludG8gYSByZWFkYWJsZSBzdHJpbmdcbmZ1bmN0aW9uIGludGVycHJldEJldFN0YXRlKHN0YXRlT2JqOiBvYmplY3QsIGR1cmF0aW9uOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGNvbnN0IHN0YXRlS2V5cyA9IE9iamVjdC5rZXlzKHN0YXRlT2JqKTtcbiAgICBpZiAoZHVyYXRpb24gPCAwICYmIChzdGF0ZUtleXMuaW5jbHVkZXMoJ2NyZWF0ZWQnKSB8fCBzdGF0ZUtleXMuaW5jbHVkZXMoJ3N0YXJ0ZWQnKSkpIHtcbiAgICAgICAgcmV0dXJuICdFeHBpcmVkJzsgLy8gTWFyayBhcyBFeHBpcmVkIGlmIGR1cmF0aW9uIGlzIGxlc3MgdGhhbiAwIGFuZCBzdGF0ZSBpcyBDcmVhdGVkIG9yIFN0YXJ0ZWRcbiAgICB9IGVsc2UgaWYgKHN0YXRlS2V5cy5pbmNsdWRlcygnY3JlYXRlZCcpKSB7XG4gICAgICAgIHJldHVybiAnQ3JlYXRlZCc7XG4gICAgfSBlbHNlIGlmIChzdGF0ZUtleXMuaW5jbHVkZXMoJ3N0YXJ0ZWQnKSkge1xuICAgICAgICByZXR1cm4gJ1N0YXJ0ZWQnO1xuICAgIH0gZWxzZSBpZiAoc3RhdGVLZXlzLmluY2x1ZGVzKCdwbGF5ZXJBV29uJykpIHtcbiAgICAgICAgcmV0dXJuICdQbGF5ZXIgQSBXb24nO1xuICAgIH0gZWxzZSBpZiAoc3RhdGVLZXlzLmluY2x1ZGVzKCdwbGF5ZXJCV29uJykpIHtcbiAgICAgICAgcmV0dXJuICdQbGF5ZXIgQiBXb24nO1xuICAgIH0gZWxzZSBpZiAoc3RhdGVLZXlzLmluY2x1ZGVzKCdkcmF3JykpIHtcbiAgICAgICAgcmV0dXJuICdEcmF3JztcbiAgICB9XG4gICAgcmV0dXJuICdVbmtub3duIFN0YXRlJztcbn1cblxuY29uc3QgdXNlRmV0Y2hBdmFpbGFibGVCZXRzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgY29ubmVjdGlvbiB9ID0gdXNlQ29ubmVjdGlvbigpO1xuICAgIGNvbnN0IHdhbGxldCA9IHVzZUFuY2hvcldhbGxldCgpO1xuICAgIGNvbnN0IFtiZXRzLCBzZXRCZXRzXSA9IHVzZVN0YXRlPEJldFtdPihbXSk7XG4gICAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgZmV0Y2hCZXRzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF3YWxsZXQpIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgQW5jaG9yUHJvdmlkZXIoY29ubmVjdGlvbiwgd2FsbGV0LCBBbmNob3JQcm92aWRlci5kZWZhdWx0T3B0aW9ucygpKTtcbiAgICAgICAgICAgIGNvbnN0IHByb2dyYW0gPSBuZXcgUHJvZ3JhbShjb25maWcucHJlZGljdGlvbnNCZXRJZGwsIG5ldyBQdWJsaWNLZXkoY29uZmlnLnByZWRpY3Rpb25zQmV0UHJvZ3JhbUlkKSwgcHJvdmlkZXIpO1xuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZldGNoZWRCZXRzID0gYXdhaXQgcHJvZ3JhbS5hY2NvdW50LmJldC5hbGwoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBmb3JtYXR0ZWRCZXRzID0gZmV0Y2hlZEJldHMubWFwKGJldCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFzc3VtaW5nIHRoZSBhY2NvdW50IGRhdGEgbWF0Y2hlcyB0aGUgSUJldEFjY291bnQgaW50ZXJmYWNlXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjY291bnREYXRhID0gYmV0LmFjY291bnQgYXMgdW5rbm93biBhcyBJQmV0QWNjb3VudDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBhY2NvdW50RGF0YS5pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFpcjogXCJTT0wvVVNEQ1wiLCAvLyBFeGFtcGxlLCBhZGp1c3QgYXMgbmVlZGVkXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3RWb2x1bWU6IGFjY291bnREYXRhLmFtb3VudC50b051bWJlcigpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGFjY291bnREYXRhLmV4cGlyeVRzLnRvTnVtYmVyKCkgLSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogaW50ZXJwcmV0QmV0U3RhdGUoYWNjb3VudERhdGEuc3RhdGUpLCAvLyBVc2UgdGhlIGhlbHBlciBmdW5jdGlvbiBoZXJlXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBzZXRCZXRzKGZvcm1hdHRlZEJldHMpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGJldHM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBmZXRjaEJldHMoKTtcbiAgICB9LCBbY29ubmVjdGlvbiwgd2FsbGV0XSk7XG5cbiAgICByZXR1cm4geyBiZXRzLCBpc0xvYWRpbmcgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUZldGNoQXZhaWxhYmxlQmV0cztcbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUFuY2hvcldhbGxldCIsInVzZUNvbm5lY3Rpb24iLCJBbmNob3JQcm92aWRlciIsIlByb2dyYW0iLCJQdWJsaWNLZXkiLCJjb25maWciLCJpbnRlcnByZXRCZXRTdGF0ZSIsInN0YXRlT2JqIiwiZHVyYXRpb24iLCJzdGF0ZUtleXMiLCJPYmplY3QiLCJrZXlzIiwiaW5jbHVkZXMiLCJ1c2VGZXRjaEF2YWlsYWJsZUJldHMiLCJjb25uZWN0aW9uIiwid2FsbGV0IiwiYmV0cyIsInNldEJldHMiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJmZXRjaEJldHMiLCJwcm92aWRlciIsImRlZmF1bHRPcHRpb25zIiwicHJvZ3JhbSIsInByZWRpY3Rpb25zQmV0SWRsIiwicHJlZGljdGlvbnNCZXRQcm9ncmFtSWQiLCJmZXRjaGVkQmV0cyIsImFjY291bnQiLCJiZXQiLCJhbGwiLCJmb3JtYXR0ZWRCZXRzIiwibWFwIiwiYWNjb3VudERhdGEiLCJpZCIsInRvU3RyaW5nIiwicGFpciIsInBvdFZvbHVtZSIsImFtb3VudCIsInRvTnVtYmVyIiwiZXhwaXJ5VHMiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Iiwic3RhdHVzIiwic3RhdGUiLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/useFetchAvailableBets.tsx\n"));

/***/ })

});